{"ast":null,"code":"var _jsxFileName = \"/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/components/Header/CategoryFilter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryFilter = ({\n  onChange\n}) => {\n  _s();\n  const categories = ['all', 'education', 'grocery', 'transport', 'medical', 'green', 'culture', 'other'];\n  const [selectedCategories, setSelectedCategories] = useState(['all']); // 기본값: all만 선택됨\n\n  const handleCheckboxChange = category => {\n    if (category === 'all') {\n      setSelectedCategories(['all']);\n      onChange(['all']);\n    } else {\n      let updated;\n      if (selectedCategories.includes(category)) {\n        updated = selectedCategories.filter(c => c !== category);\n      } else {\n        updated = [...selectedCategories.filter(c => c !== 'all'), category];\n      }\n      if (updated.length === 0) {\n        updated = ['all']; // 아무것도 없으면 all 다시 체크\n      }\n      setSelectedCategories(updated);\n      onChange(updated);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap gap-4 p-4 bg-white shadow-md rounded\",\n    children: categories.map(category => /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"flex items-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: category,\n        checked: selectedCategories.includes(category),\n        onChange: () => handleCheckboxChange(category)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), category]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryFilter, \"qx6N8h5GFZ/Z1GnJpT3d0j1GhDc=\");\n_c = CategoryFilter;\nexport default CategoryFilter;\nvar _c;\n$RefreshReg$(_c, \"CategoryFilter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CategoryFilter","onChange","_s","categories","selectedCategories","setSelectedCategories","handleCheckboxChange","category","updated","includes","filter","c","length","className","children","map","type","value","checked","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/components/Header/CategoryFilter.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CategoryFilter = ({ onChange }) => {\n  const categories = ['all', 'education', 'grocery', 'transport', 'medical', 'green', 'culture', 'other'];\n  \n  const [selectedCategories, setSelectedCategories] = useState(['all']); // 기본값: all만 선택됨\n\n  const handleCheckboxChange = (category) => {\n    if (category === 'all') {\n      setSelectedCategories(['all']);\n      onChange(['all']);\n    } else {\n      let updated;\n      if (selectedCategories.includes(category)) {\n        updated = selectedCategories.filter((c) => c !== category);\n      } else {\n        updated = [...selectedCategories.filter(c => c !== 'all'), category];\n      }\n\n      if (updated.length === 0) {\n        updated = ['all']; // 아무것도 없으면 all 다시 체크\n      }\n\n      setSelectedCategories(updated);\n      onChange(updated);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-wrap gap-4 p-4 bg-white shadow-md rounded\">\n      {categories.map((category) => (\n        <label key={category} className=\"flex items-center gap-2\">\n          <input\n            type=\"checkbox\"\n            value={category}\n            checked={selectedCategories.includes(category)}\n            onChange={() => handleCheckboxChange(category)}\n          />\n          {category}\n        </label>\n      ))}\n    </div>\n  );\n};\n\nexport default CategoryFilter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC;EAEvG,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEvE,MAAMS,oBAAoB,GAAIC,QAAQ,IAAK;IACzC,IAAIA,QAAQ,KAAK,KAAK,EAAE;MACtBF,qBAAqB,CAAC,CAAC,KAAK,CAAC,CAAC;MAC9BJ,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC,MAAM;MACL,IAAIO,OAAO;MACX,IAAIJ,kBAAkB,CAACK,QAAQ,CAACF,QAAQ,CAAC,EAAE;QACzCC,OAAO,GAAGJ,kBAAkB,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,QAAQ,CAAC;MAC5D,CAAC,MAAM;QACLC,OAAO,GAAG,CAAC,GAAGJ,kBAAkB,CAACM,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,KAAK,CAAC,EAAEJ,QAAQ,CAAC;MACtE;MAEA,IAAIC,OAAO,CAACI,MAAM,KAAK,CAAC,EAAE;QACxBJ,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;MAEAH,qBAAqB,CAACG,OAAO,CAAC;MAC9BP,QAAQ,CAACO,OAAO,CAAC;IACnB;EACF,CAAC;EAED,oBACET,OAAA;IAAKc,SAAS,EAAC,qDAAqD;IAAAC,QAAA,EACjEX,UAAU,CAACY,GAAG,CAAER,QAAQ,iBACvBR,OAAA;MAAsBc,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACvDf,OAAA;QACEiB,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEV,QAAS;QAChBW,OAAO,EAAEd,kBAAkB,CAACK,QAAQ,CAACF,QAAQ,CAAE;QAC/CN,QAAQ,EAAEA,CAAA,KAAMK,oBAAoB,CAACC,QAAQ;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,EACDf,QAAQ;IAAA,GAPCA,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQb,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAzCIF,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AA2CpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}