{"ast":null,"code":"var _jsxFileName = \"/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/components/Header/Header.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORY_TYPES_MAP = {\n  education: ['school', 'university', 'college'],\n  grocery: ['supermarket', 'grocery_store'],\n  transport: ['train_station', 'bus_station', 'transit_station', 'light_rail_station', 'subway_station'],\n  medical: ['hospital'],\n  green: ['park', 'state_park', 'natural_feature'],\n  culture: ['museum', 'tourist_attraction', 'library', 'art_gallery', 'movie_theater', 'theater', 'concert_hall', 'stadium']\n};\nfunction getCategoryFromTypes(types) {\n  if (!types || types.length === 0) return 'other';\n  for (const type of types) {\n    const category = TYPE_CATEGORY_MAP[type];\n    if (category) return category;\n  }\n  return 'other';\n}\nfunction Header({\n  selectedLocation,\n  places,\n  selectedCategories,\n  onCategoryChange\n}) {\n  var _selectedLocation$toJ;\n  const coords = selectedLocation === null || selectedLocation === void 0 ? void 0 : (_selectedLocation$toJ = selectedLocation.toJSON) === null || _selectedLocation$toJ === void 0 ? void 0 : _selectedLocation$toJ.call(selectedLocation);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute top-0 left-0 w-full z-20 bg-white bg-opacity-90 p-4 shadow-md max-h-[40vh] overflow-y-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-semibold mb-2\",\n      children: coords ? `Selected location: (${coords.lat.toFixed(5)}, ${coords.lng.toFixed(5)})` : 'Click on the map to select a location.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-2 mb-2 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedCategories.includes('all'),\n          onChange: () => onCategoryChange('all')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 18\n        }, this), \" All\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), Object.keys(CATEGORY_TYPES_MAP).map(cat => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedCategories.includes(cat),\n          onChange: () => onCategoryChange(cat)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), \" \", cat]\n      }, cat, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"text-sm max-h-[200px] overflow-y-auto\",\n      children: places.map((place, index) => {\n        const category = getCategoryFromTypes(place.types);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mb-1\",\n          children: [index + 1, \": \", place.displayName, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 51\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CATEGORY_TYPES_MAP","education","grocery","transport","medical","green","culture","getCategoryFromTypes","types","length","type","category","TYPE_CATEGORY_MAP","Header","selectedLocation","places","selectedCategories","onCategoryChange","_selectedLocation$toJ","coords","toJSON","call","className","children","lat","toFixed","lng","fileName","_jsxFileName","lineNumber","columnNumber","checked","includes","onChange","Object","keys","map","cat","place","index","displayName","_c","$RefreshReg$"],"sources":["/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/components/Header/Header.jsx"],"sourcesContent":["import React from \"react\";\n\nconst CATEGORY_TYPES_MAP = {\n    education: ['school', 'university', 'college'],\n    grocery: ['supermarket', 'grocery_store'],\n    transport: ['train_station', 'bus_station', 'transit_station', 'light_rail_station', 'subway_station'],\n    medical: ['hospital'],\n    green: ['park', 'state_park', 'natural_feature'],\n    culture: ['museum', 'tourist_attraction', 'library', 'art_gallery', 'movie_theater', 'theater', 'concert_hall', 'stadium'],\n  };\n  \n\nfunction getCategoryFromTypes(types) {\n  if (!types || types.length === 0) return 'other';\n  for (const type of types) {\n    const category = TYPE_CATEGORY_MAP[type];\n    if (category) return category;\n  }\n  return 'other';\n}\nfunction Header({ selectedLocation, places, selectedCategories, onCategoryChange }) {\n    const coords = selectedLocation?.toJSON?.();\n  \n    return (\n      <div className=\"absolute top-0 left-0 w-full z-20 bg-white bg-opacity-90 p-4 shadow-md max-h-[40vh] overflow-y-auto\">\n        <div className=\"font-semibold mb-2\">\n          {coords\n            ? `Selected location: (${coords.lat.toFixed(5)}, ${coords.lng.toFixed(5)})`\n            : 'Click on the map to select a location.'}\n        </div>\n  \n        <div className=\"flex flex-wrap gap-2 mb-2 text-sm\">\n          <label><input type=\"checkbox\" checked={selectedCategories.includes('all')} onChange={() => onCategoryChange('all')} /> All</label>\n          {Object.keys(CATEGORY_TYPES_MAP).map(cat => (\n            <label key={cat}>\n              <input\n                type=\"checkbox\"\n                checked={selectedCategories.includes(cat)}\n                onChange={() => onCategoryChange(cat)}\n              /> {cat}\n            </label>\n          ))}\n        </div>\n  \n        <ul className=\"text-sm max-h-[200px] overflow-y-auto\">\n          {places.map((place, index) => {\n            const category = getCategoryFromTypes(place.types);\n            return (\n              <li key={index} className=\"mb-1\">\n                {index + 1}: {place.displayName}, <strong>{category}</strong>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n  \n\nexport default Header;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}