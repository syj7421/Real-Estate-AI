{"ast":null,"code":"var _s = $RefreshSig$();\n/* global google */\nimport { useEffect, useRef } from 'react';\nimport { Loader } from '@googlemaps/js-api-loader';\nconst useGoogleMap = mapRef => {\n  _s();\n  const mapInstance = useRef(null);\n  const markerInstance = useRef(null);\n  const nearbyMarkersRef = useRef([]);\n  useEffect(() => {\n    const loader = new Loader({\n      apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      version: 'weekly',\n      libraries: ['marker', 'places']\n    });\n    loader.load().then(async () => {\n      const {\n        Map\n      } = await window.google.maps;\n      const {\n        AdvancedMarkerElement\n      } = await google.maps.importLibrary('marker');\n      const {\n        Place\n      } = await google.maps.importLibrary('places');\n      const melbourneCBD = {\n        lat: -37.8136,\n        lng: 144.9631\n      };\n      const map = new Map(mapRef.current, {\n        center: melbourneCBD,\n        zoom: 14,\n        mapId: 'feabc4fd011254f284cca2c8'\n      });\n      mapInstance.current = map;\n      map.addListener('click', async event => {\n        // Ï§ëÏã¨ ÎßàÏª§ ÏÑ§Ï†ï\n        const clickedLatLng = {\n          lat: event.latLng.lat(),\n          lng: event.latLng.lng()\n        };\n        if (markerInstance.current) {\n          markerInstance.current.position = clickedLatLng;\n        } else {\n          const newMarker = new AdvancedMarkerElement({\n            position: clickedLatLng,\n            map\n          });\n          markerInstance.current = newMarker;\n        }\n        console.log(\"Clicked location:\", clickedLatLng);\n\n        // Ïù¥Ï†Ñ ÎßàÏª§ Ï†úÍ±∞\n        nearbyMarkersRef.current.forEach(marker => marker.map = null);\n        nearbyMarkersRef.current = [];\n        const placeService = new Place();\n        try {\n          const {\n            places\n          } = await placeService.searchNearby({\n            locationRestriction: {\n              center: clickedLatLng,\n              radius: 800\n            },\n            includedPrimaryTypes: ['restaurant', 'cafe'],\n            fields: ['id', 'displayName', 'location'],\n            maxResultCount: 10,\n            language: 'en',\n            region: 'au'\n          });\n          if (!places || !places.length) {\n            console.log('No nearby places found.');\n            return;\n          }\n          console.log('üîç Places fetched:', places.length);\n          const bounds = new google.maps.LatLngBounds();\n          places.forEach((place, index) => {\n            try {\n              if (!place || typeof place !== 'object' || !place.id || !place.location || !place.displayName || typeof place.displayName.text !== 'string') {\n                console.warn(`‚ö†Ô∏è Skipping invalid place at index ${index}:`, place);\n                return;\n              }\n              const marker = new AdvancedMarkerElement({\n                map,\n                position: place.location,\n                title: place.displayName.text // ‚úÖ ÏïàÏ†ÑÌïòÍ≤å Ï†ëÍ∑º\n              });\n              nearbyMarkersRef.current.push(marker);\n              bounds.extend(place.location);\n            } catch (innerError) {\n              console.error(`üî• Error processing place at index ${index}:`, place, innerError);\n            }\n          });\n          if (!bounds.isEmpty()) {\n            map.fitBounds(bounds);\n          }\n        } catch (error) {\n          console.error('‚ùå Error during Place.searchNearby:', error);\n        }\n      });\n    });\n  }, [mapRef]);\n};\n_s(useGoogleMap, \"WtYCwMYtvr0vBRjkZwuDREBJKRY=\");\nexport default useGoogleMap;","map":{"version":3,"names":["useEffect","useRef","Loader","useGoogleMap","mapRef","_s","mapInstance","markerInstance","nearbyMarkersRef","loader","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","version","libraries","load","then","Map","window","google","maps","AdvancedMarkerElement","importLibrary","Place","melbourneCBD","lat","lng","map","current","center","zoom","mapId","addListener","event","clickedLatLng","latLng","position","newMarker","console","log","forEach","marker","placeService","places","searchNearby","locationRestriction","radius","includedPrimaryTypes","fields","maxResultCount","language","region","length","bounds","LatLngBounds","place","index","id","location","displayName","text","warn","title","push","extend","innerError","error","isEmpty","fitBounds"],"sources":["/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/hooks/useGoogleMap.js"],"sourcesContent":["/* global google */\nimport { useEffect, useRef } from 'react';\nimport { Loader } from '@googlemaps/js-api-loader';\n\nconst useGoogleMap = (mapRef) => {\n  const mapInstance = useRef(null);\n  const markerInstance = useRef(null);\n  const nearbyMarkersRef = useRef([]);\n\n  useEffect(() => {\n    const loader = new Loader({\n      apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      version: 'weekly',\n      libraries: ['marker', 'places'],\n    });\n\n    loader.load().then(async () => {\n      const { Map } = await window.google.maps;\n      const { AdvancedMarkerElement } = await google.maps.importLibrary('marker');\n      const { Place } = await google.maps.importLibrary('places');\n\n      const melbourneCBD = { lat: -37.8136, lng: 144.9631 };\n\n      const map = new Map(mapRef.current, {\n        center: melbourneCBD,\n        zoom: 14,\n        mapId: 'feabc4fd011254f284cca2c8',\n      });\n\n      mapInstance.current = map;\n\n      map.addListener('click', async (event) => {\n        // Ï§ëÏã¨ ÎßàÏª§ ÏÑ§Ï†ï\n        const clickedLatLng = {\n          lat: event.latLng.lat(),\n          lng: event.latLng.lng(),\n        };\n\n        if (markerInstance.current) {\n          markerInstance.current.position = clickedLatLng;\n        } else {\n          const newMarker = new AdvancedMarkerElement({\n            position: clickedLatLng,\n            map,\n          });\n          markerInstance.current = newMarker;\n        }\n\n        console.log(\"Clicked location:\", clickedLatLng);\n\n        // Ïù¥Ï†Ñ ÎßàÏª§ Ï†úÍ±∞\n        nearbyMarkersRef.current.forEach((marker) => (marker.map = null));\n        nearbyMarkersRef.current = [];\n\n        const placeService = new Place();\n\n        try {\n          const { places } = await placeService.searchNearby({\n            locationRestriction: {\n              center: clickedLatLng,\n              radius: 800,\n            },\n            includedPrimaryTypes: ['restaurant', 'cafe'],\n            fields: ['id', 'displayName', 'location'],\n            maxResultCount: 10,\n            language: 'en',\n            region: 'au',\n          });\n\n          if (!places || !places.length) {\n            console.log('No nearby places found.');\n            return;\n          }\n\n          console.log('üîç Places fetched:', places.length);\n          const bounds = new google.maps.LatLngBounds();\n\n          places.forEach((place, index) => {\n            try {\n              if (\n                !place ||\n                typeof place !== 'object' ||\n                !place.id ||\n                !place.location ||\n                !place.displayName ||\n                typeof place.displayName.text !== 'string'\n              ) {\n                console.warn(`‚ö†Ô∏è Skipping invalid place at index ${index}:`, place);\n                return;\n              }\n\n              const marker = new AdvancedMarkerElement({\n                map,\n                position: place.location,\n                title: place.displayName.text, // ‚úÖ ÏïàÏ†ÑÌïòÍ≤å Ï†ëÍ∑º\n              });\n\n              nearbyMarkersRef.current.push(marker);\n              bounds.extend(place.location);\n            } catch (innerError) {\n              console.error(`üî• Error processing place at index ${index}:`, place, innerError);\n            }\n          });\n\n          if (!bounds.isEmpty()) {\n            map.fitBounds(bounds);\n          }\n        } catch (error) {\n          console.error('‚ùå Error during Place.searchNearby:', error);\n        }\n      });\n    });\n  }, [mapRef]);\n};\n\nexport default useGoogleMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}