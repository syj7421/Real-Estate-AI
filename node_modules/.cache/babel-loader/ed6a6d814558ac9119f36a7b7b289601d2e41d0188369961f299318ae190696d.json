{"ast":null,"code":"var _jsxFileName = \"/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/utils/searchNearbyAmenities.js\";\n/* global google */\nimport ReactDOMServer from 'react-dom/server';\nimport CustomerMarker from '../components/Map/\bCustomMarker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction normalizeName(name) {\n  return name.toLowerCase().replace(/building\\s*\\d+/g, '').replace(/academic|campus|centre|center|college|institute|school|university/g, '').replace(/[^a-z0-9]/g, '').trim();\n}\nfunction removeDuplicatePlacesByName(places) {\n  const seen = new Set();\n  return places.filter(place => {\n    const norm = normalizeName(place.displayName);\n    if ([...seen].some(existing => norm.includes(existing) || existing.includes(norm))) {\n      return false;\n    }\n    seen.add(norm);\n    return true;\n  });\n}\nfunction getTopPlacesByCategory(places, maxPerCategory = 2) {\n  const grouped = {};\n  for (const place of places) {\n    if (!place.category) continue;\n    if (!grouped[place.category]) grouped[place.category] = [];\n    grouped[place.category].push(place);\n  }\n  const topPlaces = [];\n  for (const cat of Object.keys(grouped)) {\n    const sorted = grouped[cat].sort((a, b) => {\n      var _b$userRatingCount, _a$userRatingCount, _b$rating, _a$rating;\n      const ratingDiff = ((_b$userRatingCount = b.userRatingCount) !== null && _b$userRatingCount !== void 0 ? _b$userRatingCount : 0) - ((_a$userRatingCount = a.userRatingCount) !== null && _a$userRatingCount !== void 0 ? _a$userRatingCount : 0);\n      return ratingDiff !== 0 ? ratingDiff : ((_b$rating = b.rating) !== null && _b$rating !== void 0 ? _b$rating : 0) - ((_a$rating = a.rating) !== null && _a$rating !== void 0 ? _a$rating : 0);\n    });\n    topPlaces.push(...sorted.slice(0, maxPerCategory));\n  }\n  return topPlaces;\n}\nexport async function searchNearbyAmenities({\n  map,\n  clickedLocation,\n  radius,\n  includedPrimaryTypes,\n  isMajorMode = false\n}) {\n  const {\n    Place,\n    SearchNearbyRankPreference\n  } = await google.maps.importLibrary('places');\n  const {\n    AdvancedMarkerElement\n  } = await google.maps.importLibrary('marker');\n  const CATEGORY_TYPE_MAP = {\n    education: ['primary_school', 'secondary_school', 'university'],\n    medical: ['hospital', 'doctor', 'clinic'],\n    grocery: ['supermarket', 'grocery_store', 'department_store', 'shopping_mall', 'asian_grocery'],\n    transport: ['train_station', 'subway_station', 'bus_station', 'transit_station', 'light_rail_station'],\n    green: ['park', 'state_park', 'campground', 'rv_park'],\n    culture: ['museum', 'library', 'art_gallery', 'stadium', 'concert_hall']\n  };\n  const categoryReverseLookup = {};\n  for (const [category, types] of Object.entries(CATEGORY_TYPE_MAP)) {\n    for (const type of types) {\n      categoryReverseLookup[type] = category;\n    }\n  }\n  const request = {\n    locationRestriction: {\n      center: clickedLocation,\n      radius\n    },\n    fields: ['displayName', 'location', 'businessStatus', 'types', 'rating', 'userRatingCount'],\n    includedPrimaryTypes,\n    maxResultCount: 20,\n    rankPreference: SearchNearbyRankPreference.POPULARITY,\n    language: 'en-AU'\n  };\n  const {\n    places = []\n  } = await Place.searchNearby(request);\n  const filteredPlaces = places.filter(place => {\n    var _place$userRatingCoun, _place$rating, _place$types, _place$displayName$to, _place$displayName, _place$userRatingCoun2;\n    if (place.businessStatus !== 'OPERATIONAL') return false;\n    if (((_place$userRatingCoun = place.userRatingCount) !== null && _place$userRatingCoun !== void 0 ? _place$userRatingCoun : 0) < (isMajorMode ? 10 : 2)) return false;\n    if (((_place$rating = place.rating) !== null && _place$rating !== void 0 ? _place$rating : 0) < (isMajorMode ? 4.2 : 3.8)) return false;\n    const types = (_place$types = place.types) !== null && _place$types !== void 0 ? _place$types : [];\n    const name = (_place$displayName$to = (_place$displayName = place.displayName) === null || _place$displayName === void 0 ? void 0 : _place$displayName.toLowerCase()) !== null && _place$displayName$to !== void 0 ? _place$displayName$to : '';\n    if (types.some(t => CATEGORY_TYPE_MAP.education.includes(t))) return true;\n    if (types.includes('hospital') && name.includes('hospital') || types.includes('clinic') && /specialist|surgery|medical|health/.test(name)) {\n      return true;\n    }\n    if (types.includes('asian_grocery')) return true;\n    if (types.includes('department_store') || types.includes('shopping_mall') || types.includes('outlet')) {\n      return true;\n    }\n    if ((types.includes('supermarket') || types.includes('grocery_store')) && (/coles|woolworths|aldi/.test(name) || ((_place$userRatingCoun2 = place.userRatingCount) !== null && _place$userRatingCoun2 !== void 0 ? _place$userRatingCoun2 : 0) >= 50)) {\n      return true;\n    }\n    if (types.some(t => CATEGORY_TYPE_MAP.transport.includes(t))) return true;\n    if (types.some(t => CATEGORY_TYPE_MAP.green.includes(t)) && place.userRatingCount >= (isMajorMode ? 30 : 10) && place.rating >= (isMajorMode ? 4.3 : 3.8)) {\n      return true;\n    }\n    if (types.some(t => CATEGORY_TYPE_MAP.culture.includes(t)) && place.userRatingCount >= (isMajorMode ? 30 : 10) && place.rating >= (isMajorMode ? 4.3 : 3.8)) {\n      return true;\n    }\n    return false;\n  });\n  const uniquePlaces = removeDuplicatePlacesByName(filteredPlaces);\n  uniquePlaces.forEach(place => {\n    var _place$types2;\n    const matchedCategory = (_place$types2 = place.types) === null || _place$types2 === void 0 ? void 0 : _place$types2.map(t => categoryReverseLookup[t]).find(Boolean);\n    place.category = matchedCategory || null;\n  });\n  const finalPlaces = removeDuplicatePlacesByName(uniquePlaces);\n  const displayPlaces = isMajorMode ? getTopPlacesByCategory(finalPlaces, 2) : finalPlaces;\n  const markers = displayPlaces.map((place, index) => {\n    const markerHTML = ReactDOMServer.renderToStaticMarkup(/*#__PURE__*/_jsxDEV(CustomerMarker, {\n      number: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this));\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = markerHTML;\n    return new AdvancedMarkerElement({\n      map,\n      position: place.location,\n      title: place.displayName,\n      content: wrapper.firstChild\n    });\n  });\n  return {\n    places: displayPlaces,\n    markers\n  };\n}","map":{"version":3,"names":["ReactDOMServer","CustomerMarker","jsxDEV","_jsxDEV","normalizeName","name","toLowerCase","replace","trim","removeDuplicatePlacesByName","places","seen","Set","filter","place","norm","displayName","some","existing","includes","add","getTopPlacesByCategory","maxPerCategory","grouped","category","push","topPlaces","cat","Object","keys","sorted","sort","a","b","_b$userRatingCount","_a$userRatingCount","_b$rating","_a$rating","ratingDiff","userRatingCount","rating","slice","searchNearbyAmenities","map","clickedLocation","radius","includedPrimaryTypes","isMajorMode","Place","SearchNearbyRankPreference","google","maps","importLibrary","AdvancedMarkerElement","CATEGORY_TYPE_MAP","education","medical","grocery","transport","green","culture","categoryReverseLookup","types","entries","type","request","locationRestriction","center","fields","maxResultCount","rankPreference","POPULARITY","language","searchNearby","filteredPlaces","_place$userRatingCoun","_place$rating","_place$types","_place$displayName$to","_place$displayName","_place$userRatingCoun2","businessStatus","t","test","uniquePlaces","forEach","_place$types2","matchedCategory","find","Boolean","finalPlaces","displayPlaces","markers","index","markerHTML","renderToStaticMarkup","number","fileName","_jsxFileName","lineNumber","columnNumber","wrapper","document","createElement","innerHTML","position","location","title","content","firstChild"],"sources":["/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/utils/searchNearbyAmenities.js"],"sourcesContent":["/* global google */\nimport ReactDOMServer from 'react-dom/server';\nimport CustomerMarker from '../components/Map/\bCustomMarker';\n\n\nfunction normalizeName(name) {\n  return name.toLowerCase()\n    .replace(/building\\s*\\d+/g, '')\n    .replace(/academic|campus|centre|center|college|institute|school|university/g, '')\n    .replace(/[^a-z0-9]/g, '')\n    .trim();\n}\n\nfunction removeDuplicatePlacesByName(places) {\n  const seen = new Set();\n  return places.filter(place => {\n    const norm = normalizeName(place.displayName);\n    if ([...seen].some(existing => norm.includes(existing) || existing.includes(norm))) {\n      return false;\n    }\n    seen.add(norm);\n    return true;\n  });\n}\n\nfunction getTopPlacesByCategory(places, maxPerCategory = 2) {\n  const grouped = {};\n  for (const place of places) {\n    if (!place.category) continue;\n    if (!grouped[place.category]) grouped[place.category] = [];\n    grouped[place.category].push(place);\n  }\n\n  const topPlaces = [];\n  for (const cat of Object.keys(grouped)) {\n    const sorted = grouped[cat].sort((a, b) => {\n      const ratingDiff = (b.userRatingCount ?? 0) - (a.userRatingCount ?? 0);\n      return ratingDiff !== 0 ? ratingDiff : (b.rating ?? 0) - (a.rating ?? 0);\n    });\n    topPlaces.push(...sorted.slice(0, maxPerCategory));\n  }\n  return topPlaces;\n}\n\nexport async function searchNearbyAmenities({ map, clickedLocation, radius, includedPrimaryTypes, isMajorMode = false }) {\n  const { Place, SearchNearbyRankPreference } = await google.maps.importLibrary('places');\n  const { AdvancedMarkerElement } = await google.maps.importLibrary('marker');\n\n  const CATEGORY_TYPE_MAP = {\n    education: ['primary_school', 'secondary_school', 'university'],\n    medical: ['hospital', 'doctor', 'clinic'],\n    grocery: ['supermarket', 'grocery_store', 'department_store', 'shopping_mall', 'asian_grocery'],\n    transport: ['train_station', 'subway_station', 'bus_station', 'transit_station', 'light_rail_station'],\n    green: ['park', 'state_park', 'campground', 'rv_park'],\n    culture: ['museum', 'library', 'art_gallery', 'stadium', 'concert_hall'],\n  };\n\n  const categoryReverseLookup = {};\n  for (const [category, types] of Object.entries(CATEGORY_TYPE_MAP)) {\n    for (const type of types) {\n      categoryReverseLookup[type] = category;\n    }\n  }\n\n  const request = {\n    locationRestriction: {\n      center: clickedLocation,\n      radius,\n    },\n    fields: ['displayName', 'location', 'businessStatus', 'types', 'rating', 'userRatingCount'],\n    includedPrimaryTypes,\n    maxResultCount: 20,\n    rankPreference: SearchNearbyRankPreference.POPULARITY,\n    language: 'en-AU',\n  };\n\n  const { places = [] } = await Place.searchNearby(request);\n\n  const filteredPlaces = places.filter(place => {\n    if (place.businessStatus !== 'OPERATIONAL') return false;\n    if ((place.userRatingCount ?? 0) < (isMajorMode ? 10 : 2)) return false;\n    if ((place.rating ?? 0) < (isMajorMode ? 4.2 : 3.8)) return false;\n\n    const types = place.types ?? [];\n    const name = place.displayName?.toLowerCase() ?? '';\n\n    if (types.some(t => CATEGORY_TYPE_MAP.education.includes(t))) return true;\n\n    if ((types.includes('hospital') && name.includes('hospital')) ||\n        (types.includes('clinic') && /specialist|surgery|medical|health/.test(name))) {\n      return true;\n    }\n\n    if (types.includes('asian_grocery')) return true;\n\n    if (types.includes('department_store') || types.includes('shopping_mall') || types.includes('outlet')) {\n      return true;\n    }\n\n    if ((types.includes('supermarket') || types.includes('grocery_store')) &&\n        (/coles|woolworths|aldi/.test(name) || (place.userRatingCount ?? 0) >= 50)) {\n      return true;\n    }\n\n    if (types.some(t => CATEGORY_TYPE_MAP.transport.includes(t))) return true;\n\n    if (types.some(t => CATEGORY_TYPE_MAP.green.includes(t)) && place.userRatingCount >= (isMajorMode ? 30 : 10) && place.rating >= (isMajorMode ? 4.3 : 3.8)) {\n      return true;\n    }\n\n    if (types.some(t => CATEGORY_TYPE_MAP.culture.includes(t)) && place.userRatingCount >= (isMajorMode ? 30 : 10) && place.rating >= (isMajorMode ? 4.3 : 3.8)) {\n      return true;\n    }\n\n    return false;\n  });\n\n  const uniquePlaces = removeDuplicatePlacesByName(filteredPlaces);\n\n  uniquePlaces.forEach(place => {\n    const matchedCategory = place.types?.map(t => categoryReverseLookup[t]).find(Boolean);\n    place.category = matchedCategory || null;\n  });\n\n  const finalPlaces = removeDuplicatePlacesByName(uniquePlaces);\n\n  const displayPlaces = isMajorMode ? getTopPlacesByCategory(finalPlaces, 2) : finalPlaces;\n\n  const markers = displayPlaces.map((place, index) => {\n    const markerHTML = ReactDOMServer.renderToStaticMarkup(\n      <CustomerMarker number={index + 1} />\n    );\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = markerHTML;\n    return new AdvancedMarkerElement({\n      map,\n      position: place.location,\n      title: place.displayName,\n      content: wrapper.firstChild,\n    });\n  });\n\n  return { places: displayPlaces, markers };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}