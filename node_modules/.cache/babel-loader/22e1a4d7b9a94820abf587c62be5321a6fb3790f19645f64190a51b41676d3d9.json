{"ast":null,"code":"var _jsxFileName = \"/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/components/Map/MapView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { GoogleMap } from '@react-google-maps/api';\nimport LocationButton from './LocationButton';\nimport useGoogleMapApi from '../../hooks/useGoogleMapAPI';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100vh'\n};\nconst center = {\n  lat: -37.8136,\n  lng: 144.9631\n};\nconst MapView = () => {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useGoogleMapApi();\n  const mapRef = useRef(null);\n  const markersRef = useRef([]);\n  const [selectedPosition, setSelectedPosition] = useState(null);\n  const handleMapLoad = map => {\n    mapRef.current = map;\n  };\n  const handleMapClick = async event => {\n    const latLng = {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    };\n    setSelectedPosition(latLng);\n\n    // 기존 마커 제거\n    markersRef.current.forEach(marker => marker.setMap(null));\n    markersRef.current = [];\n\n    // AdvancedMarkerElement 로 마커 생성\n    const {\n      AdvancedMarkerElement\n    } = await window.google.maps.importLibrary('marker');\n    const marker = new AdvancedMarkerElement({\n      map: mapRef.current,\n      position: latLng,\n      title: 'Selected Location'\n    });\n    markersRef.current.push(marker);\n  };\n  const handleSearchNearby = async () => {\n    console.log(\"Search nearby triggered\");\n  };\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading maps...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 14,\n      onClick: handleMapClick,\n      onLoad: handleMapLoad,\n      mapId: \"YOUR_MAP_ID\" // ✅ 실제로 발급받은 ID로 교체\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), selectedPosition && /*#__PURE__*/_jsxDEV(LocationButton, {\n      onClick: handleSearchNearby\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n};\n_s(MapView, \"qLQaQbUrViPAWkx/wSQmxKvhSoQ=\", false, function () {\n  return [useGoogleMapApi];\n});\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useState","useRef","GoogleMap","LocationButton","useGoogleMapApi","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","center","lat","lng","MapView","_s","isLoaded","loadError","mapRef","markersRef","selectedPosition","setSelectedPosition","handleMapLoad","map","current","handleMapClick","event","latLng","forEach","marker","setMap","AdvancedMarkerElement","window","google","maps","importLibrary","position","title","push","handleSearchNearby","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","onClick","onLoad","mapId","_c","$RefreshReg$"],"sources":["/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/components/Map/MapView.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { GoogleMap } from '@react-google-maps/api';\nimport LocationButton from './LocationButton';\nimport useGoogleMapApi from '../../hooks/useGoogleMapAPI';\n\nconst containerStyle = {\n  width: '100%',\n  height: '100vh',\n};\n\nconst center = {\n  lat: -37.8136,\n  lng: 144.9631,\n};\n\nconst MapView = () => {\n  const { isLoaded, loadError } = useGoogleMapApi();\n  const mapRef = useRef(null);\n  const markersRef = useRef([]);\n  const [selectedPosition, setSelectedPosition] = useState(null);\n\n  const handleMapLoad = (map) => {\n    mapRef.current = map;\n  };\n\n  const handleMapClick = async (event) => {\n    const latLng = {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n    };\n    setSelectedPosition(latLng);\n\n    // 기존 마커 제거\n    markersRef.current.forEach((marker) => marker.setMap(null));\n    markersRef.current = [];\n\n    // AdvancedMarkerElement 로 마커 생성\n    const { AdvancedMarkerElement } = await window.google.maps.importLibrary('marker');\n\n    const marker = new AdvancedMarkerElement({\n      map: mapRef.current,\n      position: latLng,\n      title: 'Selected Location',\n    });\n\n    markersRef.current.push(marker);\n  };\n\n  const handleSearchNearby = async () => {\n    console.log(\"Search nearby triggered\");\n  };\n\n  if (loadError) return <div>Error loading maps</div>;\n  if (!isLoaded) return <div>Loading maps...</div>;\n\n  return (\n    <>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={14}\n        onClick={handleMapClick}\n        onLoad={handleMapLoad}\n        mapId=\"YOUR_MAP_ID\" // ✅ 실제로 발급받은 ID로 교체\n      />\n      {selectedPosition && <LocationButton onClick={handleSearchNearby} />}\n    </>\n  );\n};\n\nexport default MapView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}