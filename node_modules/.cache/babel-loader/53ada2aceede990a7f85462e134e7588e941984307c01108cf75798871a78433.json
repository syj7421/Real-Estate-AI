{"ast":null,"code":"var _jsxFileName = \"/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/utils/searchNearbyAmenities.js\";\n/* global google */\nimport ReactDOMServer from 'react-dom/server';\nimport CustomerMarker from '../components/Map/\bCustomMarker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction normalizeName(name) {\n  return name.toLowerCase().replace(/building\\s*\\d+/g, '').replace(/academic|campus|centre|center|college|institute|school|university/g, '').replace(/[^a-z0-9]/g, '').trim();\n}\nfunction removeDuplicatePlacesByName(places) {\n  const seen = new Set();\n  return places.filter(place => {\n    const norm = normalizeName(place.displayName);\n    if ([...seen].some(existing => norm.includes(existing) || existing.includes(norm))) {\n      return false;\n    }\n    seen.add(norm);\n    return true;\n  });\n}\nfunction toRad(deg) {\n  return deg * Math.PI / 180;\n}\nfunction calculateDistance(loc1, loc2) {\n  const R = 6371;\n  const lat1 = typeof loc1.lat === 'function' ? loc1.lat() : loc1.lat;\n  const lng1 = typeof loc1.lng === 'function' ? loc1.lng() : loc1.lng;\n  const lat2 = typeof loc2.lat === 'function' ? loc2.lat() : loc2.lat;\n  const lng2 = typeof loc2.lng === 'function' ? loc2.lng() : loc2.lng;\n  const dLat = toRad(lat2 - lat1);\n  const dLng = toRad(lng2 - lng1);\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\nexport async function searchNearbyAmenities({\n  map,\n  clickedLocation,\n  radius,\n  includedPrimaryTypes\n}) {\n  const {\n    Place,\n    SearchNearbyRankPreference\n  } = await google.maps.importLibrary('places');\n  const {\n    AdvancedMarkerElement\n  } = await google.maps.importLibrary('marker');\n  const CATEGORY_TYPE_MAP = {\n    education: ['primary_school', 'secondary_school', 'university'],\n    medical: ['hospital', 'doctor', 'clinic'],\n    grocery: ['supermarket', 'grocery_store', 'department_store', 'shopping_mall', 'asian_grocery'],\n    transport: ['train_station', 'subway_station', 'bus_station', 'transit_station', 'light_rail_station'],\n    green: ['park', 'state_park', 'campground', 'rv_park'],\n    culture: ['museum', 'library', 'art_gallery', 'stadium', 'concert_hall']\n  };\n  const categoryReverseLookup = {};\n  for (const [category, types] of Object.entries(CATEGORY_TYPE_MAP)) {\n    for (const type of types) {\n      categoryReverseLookup[type] = category;\n    }\n  }\n  const request = {\n    locationRestriction: {\n      center: clickedLocation,\n      radius\n    },\n    fields: ['displayName', 'location', 'businessStatus', 'types', 'rating', 'userRatingCount'],\n    includedPrimaryTypes,\n    maxResultCount: 20,\n    rankPreference: SearchNearbyRankPreference.DISTANCE,\n    language: 'en-AU'\n  };\n  const {\n    places = []\n  } = await Place.searchNearby(request);\n  const categorizedPlaces = places.filter(place => place.businessStatus === 'OPERATIONAL').map(place => {\n    var _place$types;\n    const types = (_place$types = place.types) !== null && _place$types !== void 0 ? _place$types : [];\n    const category = types.map(t => categoryReverseLookup[t]).find(Boolean) || null;\n    return {\n      ...place,\n      category\n    };\n  });\n  const transportPlaces = categorizedPlaces.filter(p => p.category === 'transport').slice(0, 20); // 순수 위치 기준 20개 제한\n\n  const nonTransportPlaces = categorizedPlaces.filter(p => p.category !== 'transport').filter(place => {\n    var _place$rating, _place$userRatingCoun;\n    const rating = (_place$rating = place.rating) !== null && _place$rating !== void 0 ? _place$rating : 0;\n    const reviewCount = (_place$userRatingCoun = place.userRatingCount) !== null && _place$userRatingCoun !== void 0 ? _place$userRatingCoun : 0;\n    if (reviewCount < 5 || rating < 3) return false;\n    return true;\n  });\n  const nonTransportSorted = removeDuplicatePlacesByName(nonTransportPlaces).sort((a, b) => {\n    var _b$userRatingCount, _a$userRatingCount;\n    return ((_b$userRatingCount = b.userRatingCount) !== null && _b$userRatingCount !== void 0 ? _b$userRatingCount : 0) - ((_a$userRatingCount = a.userRatingCount) !== null && _a$userRatingCount !== void 0 ? _a$userRatingCount : 0);\n  });\n  const finalPlaces = [...transportPlaces, ...nonTransportSorted];\n  const markers = finalPlaces.map((place, index) => {\n    const markerHTML = ReactDOMServer.renderToStaticMarkup(/*#__PURE__*/_jsxDEV(CustomerMarker, {\n      number: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this));\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = markerHTML;\n    return new AdvancedMarkerElement({\n      map,\n      position: place.location,\n      title: place.displayName,\n      content: wrapper.firstChild\n    });\n  });\n  return {\n    places: finalPlaces,\n    markers\n  };\n}","map":{"version":3,"names":["ReactDOMServer","CustomerMarker","jsxDEV","_jsxDEV","normalizeName","name","toLowerCase","replace","trim","removeDuplicatePlacesByName","places","seen","Set","filter","place","norm","displayName","some","existing","includes","add","toRad","deg","Math","PI","calculateDistance","loc1","loc2","R","lat1","lat","lng1","lng","lat2","lng2","dLat","dLng","a","sin","cos","c","atan2","sqrt","searchNearbyAmenities","map","clickedLocation","radius","includedPrimaryTypes","Place","SearchNearbyRankPreference","google","maps","importLibrary","AdvancedMarkerElement","CATEGORY_TYPE_MAP","education","medical","grocery","transport","green","culture","categoryReverseLookup","category","types","Object","entries","type","request","locationRestriction","center","fields","maxResultCount","rankPreference","DISTANCE","language","searchNearby","categorizedPlaces","businessStatus","_place$types","t","find","Boolean","transportPlaces","p","slice","nonTransportPlaces","_place$rating","_place$userRatingCoun","rating","reviewCount","userRatingCount","nonTransportSorted","sort","b","_b$userRatingCount","_a$userRatingCount","finalPlaces","markers","index","markerHTML","renderToStaticMarkup","number","fileName","_jsxFileName","lineNumber","columnNumber","wrapper","document","createElement","innerHTML","position","location","title","content","firstChild"],"sources":["/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/utils/searchNearbyAmenities.js"],"sourcesContent":["/* global google */\nimport ReactDOMServer from 'react-dom/server';\nimport CustomerMarker from '../components/Map/\bCustomMarker';\n\n\n\nfunction normalizeName(name) {\n  return name.toLowerCase()\n    .replace(/building\\s*\\d+/g, '')\n    .replace(/academic|campus|centre|center|college|institute|school|university/g, '')\n    .replace(/[^a-z0-9]/g, '')\n    .trim();\n}\n\nfunction removeDuplicatePlacesByName(places) {\n  const seen = new Set();\n  return places.filter(place => {\n    const norm = normalizeName(place.displayName);\n    if ([...seen].some(existing => norm.includes(existing) || existing.includes(norm))) {\n      return false;\n    }\n    seen.add(norm);\n    return true;\n  });\n}\n\nfunction toRad(deg) {\n  return deg * Math.PI / 180;\n}\n\nfunction calculateDistance(loc1, loc2) {\n  const R = 6371;\n  const lat1 = typeof loc1.lat === 'function' ? loc1.lat() : loc1.lat;\n  const lng1 = typeof loc1.lng === 'function' ? loc1.lng() : loc1.lng;\n  const lat2 = typeof loc2.lat === 'function' ? loc2.lat() : loc2.lat;\n  const lng2 = typeof loc2.lng === 'function' ? loc2.lng() : loc2.lng;\n\n  const dLat = toRad(lat2 - lat1);\n  const dLng = toRad(lng2 - lng1);\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\n            Math.sin(dLng / 2) * Math.sin(dLng / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\n\nexport async function searchNearbyAmenities({ map, clickedLocation, radius, includedPrimaryTypes }) {\n  const { Place, SearchNearbyRankPreference } = await google.maps.importLibrary('places');\n  const { AdvancedMarkerElement } = await google.maps.importLibrary('marker');\n\n  const CATEGORY_TYPE_MAP = {\n    education: ['primary_school', 'secondary_school', 'university'],\n    medical: ['hospital', 'doctor', 'clinic'],\n    grocery: ['supermarket', 'grocery_store', 'department_store', 'shopping_mall', 'asian_grocery'],\n    transport: ['train_station', 'subway_station', 'bus_station', 'transit_station', 'light_rail_station'],\n    green: ['park', 'state_park', 'campground', 'rv_park'],\n    culture: ['museum', 'library', 'art_gallery', 'stadium', 'concert_hall'],\n  };\n\n  const categoryReverseLookup = {};\n  for (const [category, types] of Object.entries(CATEGORY_TYPE_MAP)) {\n    for (const type of types) {\n      categoryReverseLookup[type] = category;\n    }\n  }\n\n  const request = {\n    locationRestriction: {\n      center: clickedLocation,\n      radius,\n    },\n    fields: ['displayName', 'location', 'businessStatus', 'types', 'rating', 'userRatingCount'],\n    includedPrimaryTypes,\n    maxResultCount: 20,\n    rankPreference: SearchNearbyRankPreference.DISTANCE,\n    language: 'en-AU',\n  };\n\n  const { places = [] } = await Place.searchNearby(request);\n\n  const categorizedPlaces = places.filter(place => place.businessStatus === 'OPERATIONAL').map(place => {\n    const types = place.types ?? [];\n    const category = types.map(t => categoryReverseLookup[t]).find(Boolean) || null;\n    return { ...place, category };\n  });\n\n  const transportPlaces = categorizedPlaces\n    .filter(p => p.category === 'transport')\n    .slice(0, 20); // 순수 위치 기준 20개 제한\n\n  const nonTransportPlaces = categorizedPlaces.filter(p => p.category !== 'transport').filter(place => {\n    const rating = place.rating ?? 0;\n    const reviewCount = place.userRatingCount ?? 0;\n\n    if (reviewCount < 5 || rating < 3) return false;\n\n    return true;\n  });\n\n  const nonTransportSorted = removeDuplicatePlacesByName(nonTransportPlaces)\n    .sort((a, b) => (b.userRatingCount ?? 0) - (a.userRatingCount ?? 0));\n\n  const finalPlaces = [...transportPlaces, ...nonTransportSorted];\n\n  const markers = finalPlaces.map((place, index) => {\n    const markerHTML = ReactDOMServer.renderToStaticMarkup(\n      <CustomerMarker number={index + 1} />\n    );\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = markerHTML;\n    return new AdvancedMarkerElement({\n      map,\n      position: place.location,\n      title: place.displayName,\n      content: wrapper.firstChild,\n    });\n  });\n\n  return { places: finalPlaces, markers };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}