{"ast":null,"code":"var _jsxFileName = \"/Users/jungsooyoung/Documents/software modelling/Real-Estate-AI/src/components/MapView.jsx\",\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// src/components/MapView.jsx\nimport React, { useState } from 'react';\nimport { MapContainer, TileLayer, useMapEvents } from 'react-leaflet';\nimport useSearchNearbyAmenities from '../hooks/useSearchNearbyAmenities';\nimport PlaceMarker from './PlaceMarker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClickHandler({\n  setPlaces,\n  radius,\n  amenities\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  useMapEvents({\n    click: _s(async e => {\n      _s();\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      try {\n        const places = await useSearchNearbyAmenities({\n          lat,\n          lng,\n          radius,\n          amenities\n        });\n        setPlaces(places);\n      } catch (err) {\n        console.error(err);\n      }\n    }, \"8SRCyvx2e7HUHiRBr7aGvRB6Hw0=\", false, function () {\n      return [useSearchNearbyAmenities];\n    })\n  });\n  return null;\n}\n_s2(ClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c = ClickHandler;\nexport default function MapView() {\n  _s3();\n  const [places, setPlaces] = useState([]);\n  const radius = 1000; // metres\n  const amenities = ['restaurant', 'school', 'hospital'];\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [-37.8136, 144.9631],\n    zoom: 14,\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClickHandler, {\n      setPlaces: setPlaces,\n      radius: radius,\n      amenities: amenities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), places.map(place => /*#__PURE__*/_jsxDEV(PlaceMarker, {\n      place: place\n    }, place.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s3(MapView, \"CEQVXr2IjoQ3A0PERN12D+A9LME=\");\n_c2 = MapView;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClickHandler\");\n$RefreshReg$(_c2, \"MapView\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","useMapEvents","useSearchNearbyAmenities","PlaceMarker","jsxDEV","_jsxDEV","ClickHandler","setPlaces","radius","amenities","_s2","_s","$RefreshSig$","click","e","lat","lng","latlng","places","err","console","error","_c","MapView","_s3","center","zoom","style","height","width","children","url","fileName","_jsxFileName","lineNumber","columnNumber","map","place","id","_c2","$RefreshReg$"],"sources":["/Users/jungsooyoung/Documents/software modelling/Real-Estate-AI/src/components/MapView.jsx"],"sourcesContent":["// src/components/MapView.jsx\nimport React, { useState } from 'react';\nimport { MapContainer, TileLayer, useMapEvents } from 'react-leaflet';\nimport useSearchNearbyAmenities  from '../hooks/useSearchNearbyAmenities';\nimport PlaceMarker from './PlaceMarker';\n\nfunction ClickHandler({ setPlaces, radius, amenities }) {\n  useMapEvents({\n    click: async (e) => {\n      const { lat, lng } = e.latlng;\n      try {\n        const places = await useSearchNearbyAmenities({ lat, lng, radius, amenities });\n        setPlaces(places);\n      } catch (err) {\n        console.error(err);\n      }\n    },\n  });\n  return null;\n}\n\nexport default function MapView() {\n  const [places, setPlaces] = useState([]);\n  const radius = 1000; // metres\n  const amenities = ['restaurant', 'school', 'hospital'];\n\n  return (\n    <MapContainer\n      center={[-37.8136, 144.9631]}\n      zoom={14}\n      style={{ height: '100vh', width: '100%' }}\n    >\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n      <ClickHandler setPlaces={setPlaces} radius={radius} amenities={amenities} />\n      {places.map(place => (\n        <PlaceMarker key={place.id} place={place} />\n      ))}\n    </MapContainer>\n  );\n}\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,SAAS,EAAEC,YAAY,QAAQ,eAAe;AACrE,OAAOC,wBAAwB,MAAO,mCAAmC;AACzE,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAC;EAAEC,SAAS;EAAEC,MAAM;EAAEC;AAAU,CAAC,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACtDX,YAAY,CAAC;IACXY,KAAK,EAAAF,EAAA,CAAE,MAAOG,CAAC,IAAK;MAAAH,EAAA;MAClB,MAAM;QAAEI,GAAG;QAAEC;MAAI,CAAC,GAAGF,CAAC,CAACG,MAAM;MAC7B,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMhB,wBAAwB,CAAC;UAAEa,GAAG;UAAEC,GAAG;UAAER,MAAM;UAAEC;QAAU,CAAC,CAAC;QAC9EF,SAAS,CAACW,MAAM,CAAC;MACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;IACF,CAAC;MAAA,QALwBjB,wBAAwB;IAAA;EAMnD,CAAC,CAAC;EACF,OAAO,IAAI;AACb;AAACQ,GAAA,CAbQJ,YAAY;EAAA,QACnBL,YAAY;AAAA;AAAAqB,EAAA,GADLhB,YAAY;AAerB,eAAe,SAASiB,OAAOA,CAAA,EAAG;EAAAC,GAAA;EAChC,MAAM,CAACN,MAAM,EAAEX,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMU,MAAM,GAAG,IAAI,CAAC,CAAC;EACrB,MAAMC,SAAS,GAAG,CAAC,YAAY,EAAE,QAAQ,EAAE,UAAU,CAAC;EAEtD,oBACEJ,OAAA,CAACN,YAAY;IACX0B,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAE;IAC7BC,IAAI,EAAE,EAAG;IACTC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAE1CzB,OAAA,CAACL,SAAS;MAAC+B,GAAG,EAAC;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtE9B,OAAA,CAACC,YAAY;MAACC,SAAS,EAAEA,SAAU;MAACC,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA;IAAU;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC3EjB,MAAM,CAACkB,GAAG,CAACC,KAAK,iBACfhC,OAAA,CAACF,WAAW;MAAgBkC,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB;AAACX,GAAA,CAlBuBD,OAAO;AAAAgB,GAAA,GAAPhB,OAAO;AAAA,IAAAD,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}