{"ast":null,"code":"var _jsxFileName = \"/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/utils/searchNearbyAmenities.js\";\n/* global google */\nimport ReactDOMServer from 'react-dom/server';\nimport CustomerMarker from '../components/Map/\bCustomMarker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction normalizeName(name) {\n  return name.toLowerCase().replace(/building\\s*\\d+/g, '').replace(/academic|campus|centre|center|college|institute|school|university/g, '').replace(/[^a-z0-9]/g, '').trim();\n}\nfunction removeDuplicatePlacesByName(places) {\n  const seen = new Set();\n  return places.filter(place => {\n    const norm = normalizeName(place.displayName);\n    if ([...seen].some(existing => norm.includes(existing) || existing.includes(norm))) {\n      return false;\n    }\n    seen.add(norm);\n    return true;\n  });\n}\nfunction toRad(deg) {\n  return deg * Math.PI / 180;\n}\nfunction calculateDistance(loc1, loc2) {\n  const R = 6371; // Earth radius in km\n  const dLat = toRad(loc2.lat - loc1.lat);\n  const dLng = toRad(loc2.lng - loc1.lng);\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(loc1.lat)) * Math.cos(toRad(loc2.lat)) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\nexport async function searchNearbyAmenities({\n  map,\n  clickedLocation,\n  radius,\n  includedPrimaryTypes\n}) {\n  const {\n    Place,\n    SearchNearbyRankPreference\n  } = await google.maps.importLibrary('places');\n  const {\n    AdvancedMarkerElement\n  } = await google.maps.importLibrary('marker');\n  const CATEGORY_TYPE_MAP = {\n    education: ['primary_school', 'secondary_school', 'university'],\n    medical: ['hospital', 'doctor', 'clinic'],\n    grocery: ['supermarket', 'grocery_store', 'department_store', 'shopping_mall', 'asian_grocery'],\n    transport: ['train_station', 'subway_station', 'bus_station', 'transit_station', 'light_rail_station'],\n    green: ['park', 'state_park', 'campground', 'rv_park'],\n    culture: ['museum', 'library', 'art_gallery', 'stadium', 'concert_hall']\n  };\n  const categoryReverseLookup = {};\n  for (const [category, types] of Object.entries(CATEGORY_TYPE_MAP)) {\n    for (const type of types) {\n      categoryReverseLookup[type] = category;\n    }\n  }\n  const request = {\n    locationRestriction: {\n      center: clickedLocation,\n      radius\n    },\n    fields: ['displayName', 'location', 'businessStatus', 'types', 'rating', 'userRatingCount'],\n    includedPrimaryTypes,\n    maxResultCount: 20,\n    rankPreference: SearchNearbyRankPreference.POPULARITY,\n    language: 'en-AU'\n  };\n  const {\n    places = []\n  } = await Place.searchNearby(request);\n  const filteredPlaces = places.filter(place => {\n    var _place$userRatingCoun, _place$rating, _place$types, _place$displayName$to, _place$displayName, _place$userRatingCoun2;\n    if (place.businessStatus !== 'OPERATIONAL') return false;\n    if (((_place$userRatingCoun = place.userRatingCount) !== null && _place$userRatingCoun !== void 0 ? _place$userRatingCoun : 0) < 5) return false;\n    if (((_place$rating = place.rating) !== null && _place$rating !== void 0 ? _place$rating : 0) < 3) return false;\n    const types = (_place$types = place.types) !== null && _place$types !== void 0 ? _place$types : [];\n    const name = (_place$displayName$to = (_place$displayName = place.displayName) === null || _place$displayName === void 0 ? void 0 : _place$displayName.toLowerCase()) !== null && _place$displayName$to !== void 0 ? _place$displayName$to : '';\n    if (types.some(t => CATEGORY_TYPE_MAP.education.includes(t))) return true;\n    if (types.includes('hospital') && name.includes('hospital') || types.includes('clinic') && /specialist|surgery|medical|health/.test(name)) {\n      return true;\n    }\n    if (types.includes('asian_grocery')) return true;\n    if (types.includes('department_store') || types.includes('shopping_mall') || types.includes('outlet')) {\n      return true;\n    }\n    if ((types.includes('supermarket') || types.includes('grocery_store')) && (/coles|woolworths|aldi/.test(name) || ((_place$userRatingCoun2 = place.userRatingCount) !== null && _place$userRatingCoun2 !== void 0 ? _place$userRatingCoun2 : 0) >= 50)) {\n      return true;\n    }\n    if (types.some(t => CATEGORY_TYPE_MAP.transport.includes(t))) return true;\n    if (types.some(t => CATEGORY_TYPE_MAP.green.includes(t)) && place.userRatingCount >= 10 && place.rating >= 3.8) {\n      return true;\n    }\n    if (types.some(t => CATEGORY_TYPE_MAP.culture.includes(t)) && place.userRatingCount >= 10 && place.rating >= 3.8) {\n      return true;\n    }\n    return false;\n  });\n  let uniquePlaces = removeDuplicatePlacesByName(filteredPlaces);\n  uniquePlaces.forEach(place => {\n    var _place$types2;\n    const matchedCategory = (_place$types2 = place.types) === null || _place$types2 === void 0 ? void 0 : _place$types2.map(t => categoryReverseLookup[t]).find(Boolean);\n    place.category = matchedCategory || null;\n  });\n\n  // ðŸ“Œ transport ì¹´í…Œê³ ë¦¬ë§Œ ê±°ë¦¬ìˆœìœ¼ë¡œ ìž¬ì •ë ¬\n  const transportPlaces = uniquePlaces.filter(p => p.category === 'transport').sort((a, b) => {\n    const distA = calculateDistance(clickedLocation, a.location);\n    const distB = calculateDistance(clickedLocation, b.location);\n    return distA - distB;\n  });\n\n  // ê·¸ ì™¸ ì¹´í…Œê³ ë¦¬ëŠ” ê¸°ì¡´ ìˆœì„œ ìœ ì§€\n  const otherPlaces = uniquePlaces.filter(p => p.category !== 'transport');\n  const finalPlaces = [...transportPlaces, ...otherPlaces];\n  const markers = finalPlaces.map((place, index) => {\n    const markerHTML = ReactDOMServer.renderToStaticMarkup(/*#__PURE__*/_jsxDEV(CustomerMarker, {\n      number: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this));\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = markerHTML;\n    return new AdvancedMarkerElement({\n      map,\n      position: place.location,\n      title: place.displayName,\n      content: wrapper.firstChild\n    });\n  });\n  return {\n    places: finalPlaces,\n    markers\n  };\n}","map":{"version":3,"names":["ReactDOMServer","CustomerMarker","jsxDEV","_jsxDEV","normalizeName","name","toLowerCase","replace","trim","removeDuplicatePlacesByName","places","seen","Set","filter","place","norm","displayName","some","existing","includes","add","toRad","deg","Math","PI","calculateDistance","loc1","loc2","R","dLat","lat","dLng","lng","a","sin","cos","c","atan2","sqrt","searchNearbyAmenities","map","clickedLocation","radius","includedPrimaryTypes","Place","SearchNearbyRankPreference","google","maps","importLibrary","AdvancedMarkerElement","CATEGORY_TYPE_MAP","education","medical","grocery","transport","green","culture","categoryReverseLookup","category","types","Object","entries","type","request","locationRestriction","center","fields","maxResultCount","rankPreference","POPULARITY","language","searchNearby","filteredPlaces","_place$userRatingCoun","_place$rating","_place$types","_place$displayName$to","_place$displayName","_place$userRatingCoun2","businessStatus","userRatingCount","rating","t","test","uniquePlaces","forEach","_place$types2","matchedCategory","find","Boolean","transportPlaces","p","sort","b","distA","location","distB","otherPlaces","finalPlaces","markers","index","markerHTML","renderToStaticMarkup","number","fileName","_jsxFileName","lineNumber","columnNumber","wrapper","document","createElement","innerHTML","position","title","content","firstChild"],"sources":["/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/utils/searchNearbyAmenities.js"],"sourcesContent":["/* global google */\nimport ReactDOMServer from 'react-dom/server';\nimport CustomerMarker from '../components/Map/\bCustomMarker';\n\n\n\nfunction normalizeName(name) {\n  return name.toLowerCase()\n    .replace(/building\\s*\\d+/g, '')\n    .replace(/academic|campus|centre|center|college|institute|school|university/g, '')\n    .replace(/[^a-z0-9]/g, '')\n    .trim();\n}\n\nfunction removeDuplicatePlacesByName(places) {\n  const seen = new Set();\n  return places.filter(place => {\n    const norm = normalizeName(place.displayName);\n    if ([...seen].some(existing => norm.includes(existing) || existing.includes(norm))) {\n      return false;\n    }\n    seen.add(norm);\n    return true;\n  });\n}\n\nfunction toRad(deg) {\n  return deg * Math.PI / 180;\n}\n\nfunction calculateDistance(loc1, loc2) {\n  const R = 6371; // Earth radius in km\n  const dLat = toRad(loc2.lat - loc1.lat);\n  const dLng = toRad(loc2.lng - loc1.lng);\n  const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n            Math.cos(toRad(loc1.lat)) * Math.cos(toRad(loc2.lat)) *\n            Math.sin(dLng/2) * Math.sin(dLng/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c;\n}\n\nexport async function searchNearbyAmenities({ map, clickedLocation, radius, includedPrimaryTypes }) {\n  const { Place, SearchNearbyRankPreference } = await google.maps.importLibrary('places');\n  const { AdvancedMarkerElement } = await google.maps.importLibrary('marker');\n\n  const CATEGORY_TYPE_MAP = {\n    education: ['primary_school', 'secondary_school', 'university'],\n    medical: ['hospital', 'doctor', 'clinic'],\n    grocery: ['supermarket', 'grocery_store', 'department_store', 'shopping_mall', 'asian_grocery'],\n    transport: ['train_station', 'subway_station', 'bus_station', 'transit_station', 'light_rail_station'],\n    green: ['park', 'state_park', 'campground', 'rv_park'],\n    culture: ['museum', 'library', 'art_gallery', 'stadium', 'concert_hall'],\n  };\n\n  const categoryReverseLookup = {};\n  for (const [category, types] of Object.entries(CATEGORY_TYPE_MAP)) {\n    for (const type of types) {\n      categoryReverseLookup[type] = category;\n    }\n  }\n\n  const request = {\n    locationRestriction: {\n      center: clickedLocation,\n      radius,\n    },\n    fields: ['displayName', 'location', 'businessStatus', 'types', 'rating', 'userRatingCount'],\n    includedPrimaryTypes,\n    maxResultCount: 20,\n    rankPreference: SearchNearbyRankPreference.POPULARITY,\n    language: 'en-AU',\n  };\n\n  const { places = [] } = await Place.searchNearby(request);\n\n  const filteredPlaces = places.filter(place => {\n    if (place.businessStatus !== 'OPERATIONAL') return false;\n    if ((place.userRatingCount ?? 0) < 5) return false;\n    if ((place.rating ?? 0) < 3) return false;\n\n    const types = place.types ?? [];\n    const name = place.displayName?.toLowerCase() ?? '';\n\n    if (types.some(t => CATEGORY_TYPE_MAP.education.includes(t))) return true;\n\n    if ((types.includes('hospital') && name.includes('hospital')) ||\n        (types.includes('clinic') && /specialist|surgery|medical|health/.test(name))) {\n      return true;\n    }\n\n    if (types.includes('asian_grocery')) return true;\n\n    if (types.includes('department_store') || types.includes('shopping_mall') || types.includes('outlet')) {\n      return true;\n    }\n\n    if ((types.includes('supermarket') || types.includes('grocery_store')) &&\n        (/coles|woolworths|aldi/.test(name) || (place.userRatingCount ?? 0) >= 50)) {\n      return true;\n    }\n\n    if (types.some(t => CATEGORY_TYPE_MAP.transport.includes(t))) return true;\n\n    if (types.some(t => CATEGORY_TYPE_MAP.green.includes(t)) && place.userRatingCount >= 10 && place.rating >= 3.8) {\n      return true;\n    }\n\n    if (types.some(t => CATEGORY_TYPE_MAP.culture.includes(t)) && place.userRatingCount >= 10 && place.rating >= 3.8) {\n      return true;\n    }\n\n    return false;\n  });\n\n  let uniquePlaces = removeDuplicatePlacesByName(filteredPlaces);\n\n  uniquePlaces.forEach(place => {\n    const matchedCategory = place.types?.map(t => categoryReverseLookup[t]).find(Boolean);\n    place.category = matchedCategory || null;\n  });\n\n  // ðŸ“Œ transport ì¹´í…Œê³ ë¦¬ë§Œ ê±°ë¦¬ìˆœìœ¼ë¡œ ìž¬ì •ë ¬\n  const transportPlaces = uniquePlaces\n    .filter(p => p.category === 'transport')\n    .sort((a, b) => {\n      const distA = calculateDistance(clickedLocation, a.location);\n      const distB = calculateDistance(clickedLocation, b.location);\n      return distA - distB;\n    });\n\n  // ê·¸ ì™¸ ì¹´í…Œê³ ë¦¬ëŠ” ê¸°ì¡´ ìˆœì„œ ìœ ì§€\n  const otherPlaces = uniquePlaces.filter(p => p.category !== 'transport');\n\n  const finalPlaces = [...transportPlaces, ...otherPlaces];\n\n  const markers = finalPlaces.map((place, index) => {\n    const markerHTML = ReactDOMServer.renderToStaticMarkup(\n      <CustomerMarker number={index + 1} />\n    );\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = markerHTML;\n    return new AdvancedMarkerElement({\n      map,\n      position: place.location,\n      title: place.displayName,\n      content: wrapper.firstChild,\n    });\n  });\n\n  return { places: finalPlaces, markers };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}