{"ast":null,"code":"var _jsxFileName = \"/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/components/Map/MapView.jsx\",\n  _s = $RefreshSig$();\n// src/components/Map/MapView.jsx\nimport React, { useState, useRef } from 'react';\nimport { GoogleMap, Marker } from '@react-google-maps/api';\nimport useGoogleMapApi from '../../hooks/useGoogleMapApi';\nimport fetchNearbyPlaces from './fetchNearbyPlaces';\nimport LocationButton from './LocationButton';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100vh'\n};\nconst defaultCenter = {\n  lat: -37.8136,\n  lng: 144.9631\n};\nconst MapView = () => {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useGoogleMapApi();\n  const mapRef = useRef(null);\n  const [selectedPosition, setSelectedPosition] = useState(null);\n  const [places, setPlaces] = useState([]);\n  const handleMapLoad = map => {\n    mapRef.current = map;\n  };\n  const handleMapClick = event => {\n    const position = {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    };\n    setSelectedPosition(position);\n    setPlaces([]);\n  };\n  const handleSearchNearby = () => {\n    if (selectedPosition) {\n      fetchNearbyPlaces(selectedPosition, setPlaces);\n    }\n  };\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uC9C0\\uB3C4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uB370 \\uC2E4\\uD328\\uD588\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uC9C0\\uB3C4 \\uB85C\\uB529 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: defaultCenter,\n      zoom: 14,\n      onLoad: handleMapLoad,\n      onClick: handleMapClick,\n      children: [selectedPosition && /*#__PURE__*/_jsxDEV(Marker, {\n        position: selectedPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 30\n      }, this), places.map((place, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: place.geometry.location.lat,\n          lng: place.geometry.location.lng\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), selectedPosition && /*#__PURE__*/_jsxDEV(LocationButton, {\n      onClick: handleSearchNearby\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n};\n_s(MapView, \"wI/WeJcvWQy/koycRLW7WADO3OM=\", false, function () {\n  return [useGoogleMapApi];\n});\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useState","useRef","GoogleMap","Marker","useGoogleMapApi","fetchNearbyPlaces","LocationButton","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","defaultCenter","lat","lng","MapView","_s","isLoaded","loadError","mapRef","selectedPosition","setSelectedPosition","places","setPlaces","handleMapLoad","map","current","handleMapClick","event","position","latLng","handleSearchNearby","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","center","zoom","onLoad","onClick","place","index","geometry","location","_c","$RefreshReg$"],"sources":["/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/components/Map/MapView.jsx"],"sourcesContent":["// src/components/Map/MapView.jsx\nimport React, { useState, useRef } from 'react';\nimport { GoogleMap, Marker } from '@react-google-maps/api';\nimport useGoogleMapApi from '../../hooks/useGoogleMapApi';\nimport fetchNearbyPlaces from './fetchNearbyPlaces';\nimport LocationButton from './LocationButton';\n\nconst containerStyle = {\n  width: '100%',\n  height: '100vh',\n};\n\nconst defaultCenter = {\n  lat: -37.8136,\n  lng: 144.9631,\n};\n\nconst MapView = () => {\n  const { isLoaded, loadError } = useGoogleMapApi();\n  const mapRef = useRef(null);\n  const [selectedPosition, setSelectedPosition] = useState(null);\n  const [places, setPlaces] = useState([]);\n\n  const handleMapLoad = (map) => {\n    mapRef.current = map;\n  };\n\n  const handleMapClick = (event) => {\n    const position = {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n    };\n    setSelectedPosition(position);\n    setPlaces([]);\n  };\n\n  const handleSearchNearby = () => {\n    if (selectedPosition) {\n      fetchNearbyPlaces(selectedPosition, setPlaces);\n    }\n  };\n\n  if (loadError) return <div>지도를 불러오는 데 실패했습니다.</div>;\n  if (!isLoaded) return <div>지도 로딩 중...</div>;\n\n  return (\n    <>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={defaultCenter}\n        zoom={14}\n        onLoad={handleMapLoad}\n        onClick={handleMapClick}\n      >\n        {selectedPosition && <Marker position={selectedPosition} />}\n\n        {places.map((place, index) => (\n          <Marker\n            key={index}\n            position={{\n              lat: place.geometry.location.lat,\n              lng: place.geometry.location.lng,\n            }}\n          />\n        ))}\n      </GoogleMap>\n\n      {selectedPosition && <LocationButton onClick={handleSearchNearby} />}\n    </>\n  );\n};\n\nexport default MapView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}