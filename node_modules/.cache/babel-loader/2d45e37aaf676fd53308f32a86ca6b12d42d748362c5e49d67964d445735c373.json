{"ast":null,"code":"var _jsxFileName = \"/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/hooks/useGoogleMap.js\",\n  _s = $RefreshSig$();\n/* global google */\nimport { useEffect, useRef } from 'react';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport CustomerMarker from '../components/Map/CustomMarker';\nimport ReactDOMServer from 'react-dom/server';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useGoogleMap = (mapRef, onLocationSelect, onPlacesUpdate) => {\n  _s();\n  const mapInstance = useRef(null);\n  const markerInstance = useRef(null);\n  const nearbyMarkersRef = useRef([]); // 기존 마커 저장\n\n  useEffect(() => {\n    const loader = new Loader({\n      apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      version: 'weekly'\n    });\n    loader.load().then(async () => {\n      const {\n        Map\n      } = await google.maps.importLibrary('maps');\n      const {\n        AdvancedMarkerElement\n      } = await google.maps.importLibrary('marker');\n      const {\n        Place,\n        SearchNearbyRankPreference\n      } = await google.maps.importLibrary('places');\n      const melbourneCBD = {\n        lat: -37.8136,\n        lng: 144.9631\n      };\n      const map = new Map(mapRef.current, {\n        center: melbourneCBD,\n        zoom: 14,\n        mapId: 'feabc4fd011254f284cca2c8'\n      });\n      mapInstance.current = map;\n      map.addListener('click', async event => {\n        const clickedLocation = event.latLng;\n        onLocationSelect(clickedLocation);\n\n        // 선택 마커 생성 또는 위치 이동\n        if (markerInstance.current) {\n          markerInstance.current.position = clickedLocation;\n        } else {\n          markerInstance.current = new AdvancedMarkerElement({\n            position: clickedLocation,\n            map\n          });\n        }\n\n        // 기존 마커 제거\n        nearbyMarkersRef.current.forEach(marker => marker.map = null);\n        nearbyMarkersRef.current = [];\n\n        // 검색 요청\n        const request = {\n          locationRestriction: {\n            center: clickedLocation,\n            radius: 800\n          },\n          fields: ['displayName', 'location', 'businessStatus', 'types'],\n          includedPrimaryTypes: ['school', 'supermarket', 'hospital', 'park', 'train_station', 'bus_station', 'transit_station', 'light_rail_station'],\n          maxResultCount: 20,\n          rankPreference: SearchNearbyRankPreference.POPULARITY,\n          language: 'en-AU'\n        };\n\n        // 장소 검색\n        const {\n          places\n        } = await Place.searchNearby(request);\n        if (places.length) {\n          places.forEach((place, index) => {\n            const markerHTML = ReactDOMServer.renderToStaticMarkup(/*#__PURE__*/_jsxDEV(CustomerMarker, {\n              number: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this));\n            const wrapper = document.createElement('div');\n            wrapper.innerHTML = markerHTML;\n            const marker = new AdvancedMarkerElement({\n              map,\n              position: place.location,\n              title: place.displayName,\n              content: wrapper.firstChild\n            });\n            nearbyMarkersRef.current.push(marker);\n          });\n        } else {\n          console.log('No nearby places found.');\n        }\n        onPlacesUpdate(places);\n      });\n    });\n  }, [mapRef, onLocationSelect, onPlacesUpdate]);\n};\n_s(useGoogleMap, \"WtYCwMYtvr0vBRjkZwuDREBJKRY=\");\nexport default useGoogleMap;","map":{"version":3,"names":["useEffect","useRef","Loader","CustomerMarker","ReactDOMServer","jsxDEV","_jsxDEV","useGoogleMap","mapRef","onLocationSelect","onPlacesUpdate","_s","mapInstance","markerInstance","nearbyMarkersRef","loader","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","version","load","then","Map","google","maps","importLibrary","AdvancedMarkerElement","Place","SearchNearbyRankPreference","melbourneCBD","lat","lng","map","current","center","zoom","mapId","addListener","event","clickedLocation","latLng","position","forEach","marker","request","locationRestriction","radius","fields","includedPrimaryTypes","maxResultCount","rankPreference","POPULARITY","language","places","searchNearby","length","place","index","markerHTML","renderToStaticMarkup","number","fileName","_jsxFileName","lineNumber","columnNumber","wrapper","document","createElement","innerHTML","location","title","displayName","content","firstChild","push","console","log"],"sources":["/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/hooks/useGoogleMap.js"],"sourcesContent":["/* global google */\nimport { useEffect, useRef } from 'react';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport CustomerMarker from '../components/Map/CustomMarker';\nimport ReactDOMServer from 'react-dom/server';\n\nconst useGoogleMap = (mapRef, onLocationSelect, onPlacesUpdate) => {\n  const mapInstance = useRef(null);\n  const markerInstance = useRef(null);\n  const nearbyMarkersRef = useRef([]); // 기존 마커 저장\n\n  useEffect(() => {\n    const loader = new Loader({\n      apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      version: 'weekly',\n    });\n\n    loader.load().then(async () => {\n      const { Map } = await google.maps.importLibrary('maps');\n      const { AdvancedMarkerElement } = await google.maps.importLibrary('marker');\n      const { Place, SearchNearbyRankPreference } = await google.maps.importLibrary('places');\n\n      const melbourneCBD = { lat: -37.8136, lng: 144.9631 };\n      const map = new Map(mapRef.current, {\n        center: melbourneCBD,\n        zoom: 14,\n        mapId: 'feabc4fd011254f284cca2c8',\n      });\n\n      mapInstance.current = map;\n\n      map.addListener('click', async (event) => {\n        const clickedLocation = event.latLng;\n        onLocationSelect(clickedLocation);\n\n        // 선택 마커 생성 또는 위치 이동\n        if (markerInstance.current) {\n          markerInstance.current.position = clickedLocation;\n        } else {\n          markerInstance.current = new AdvancedMarkerElement({\n            position: clickedLocation,\n            map,\n          });\n        }\n\n        // 기존 마커 제거\n        nearbyMarkersRef.current.forEach((marker) => (marker.map = null));\n        nearbyMarkersRef.current = [];\n\n        // 검색 요청\n        const request = {\n          locationRestriction: {\n            center: clickedLocation,\n            radius: 800,\n          },\n          fields: ['displayName', 'location', 'businessStatus', 'types'],\n          includedPrimaryTypes: [\n            'school',\n            'supermarket',\n            'hospital',\n            'park',\n            'train_station',\n            'bus_station',\n            'transit_station',\n            'light_rail_station',\n          ],\n          maxResultCount: 20,\n          rankPreference: SearchNearbyRankPreference.POPULARITY,\n          language: 'en-AU',\n        };\n\n        // 장소 검색\n        const { places } = await Place.searchNearby(request);\n\n        if (places.length) {\n          places.forEach((place, index) => {\n            const markerHTML = ReactDOMServer.renderToStaticMarkup(\n              <CustomerMarker number={index + 1} />\n            );\n\n            const wrapper = document.createElement('div');\n            wrapper.innerHTML = markerHTML;\n\n            const marker = new AdvancedMarkerElement({\n              map,\n              position: place.location,\n              title: place.displayName,\n              content: wrapper.firstChild,\n            });\n\n            nearbyMarkersRef.current.push(marker);\n          });\n        } else {\n          console.log('No nearby places found.');\n        }\n\n        onPlacesUpdate(places);\n      });\n    });\n  }, [mapRef, onLocationSelect, onPlacesUpdate]);\n};\n\nexport default useGoogleMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}