{"ast":null,"code":"var _jsxFileName = \"/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/utils/searchNearbyAmenities.js\";\n/* global google */\nimport ReactDOMServer from 'react-dom/server';\nimport CustomerMarker from '../components/Map/\bCustomMarker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORY_TYPE_MAP = {\n  education: ['primary_school', 'secondary_school', 'university'],\n  medical: ['hospital', 'doctor', 'clinic'],\n  shopping: ['supermarket', 'grocery_store', 'department_store', 'shopping_mall', 'asian_grocery'],\n  transport: ['train_station', 'subway_station', 'bus_station', 'transit_station', 'light_rail_station'],\n  green: ['park', 'state_park', 'campground', 'rv_park'],\n  culture: ['museum', 'library', 'art_gallery', 'stadium', 'concert_hall']\n};\nconst categoryReverseLookup = Object.fromEntries(Object.entries(CATEGORY_TYPE_MAP).flatMap(([category, types]) => types.map(type => [type, category])));\nfunction normalizeName(name) {\n  return name.toLowerCase().replace(/building\\s*\\d+/g, '').replace(/academic|campus|centre|center|college|institute|school|university/g, '').replace(/[^a-z0-9]/g, '').trim();\n}\nfunction isRelevantPlace(place, isTransport, name) {\n  const {\n    types = [],\n    rating = 0,\n    userRatingCount = 0\n  } = place;\n  if (userRatingCount < 5 || rating < 3.0) {\n    return false;\n  }\n  return types.some(t => CATEGORY_TYPE_MAP.education.includes(t) && /university|college|high school|primary school/.test(name)) || types.includes('hospital') && name.includes('hospital') || types.includes('clinic') && /specialist|surgery|medical|health/.test(name) || types.includes('asian_grocery') || types.includes('department_store') || types.includes('shopping_mall') || types.includes('outlet') || (types.includes('supermarket') || types.includes('grocery_store')) && /coles|woolworths|aldi/.test(name) || isTransport || types.some(t => CATEGORY_TYPE_MAP.green.includes(t)) && userRatingCount >= 10 && rating >= 3.8 || types.some(t => CATEGORY_TYPE_MAP.culture.includes(t)) && userRatingCount >= 10 && rating >= 3.8;\n}\nfunction removeDuplicatePlaces(places) {\n  const seen = new Set();\n  return places.filter(place => {\n    const norm = normalizeName(place.displayName);\n    if ([...seen].some(existing => norm.includes(existing) || existing.includes(norm))) return false;\n    seen.add(norm);\n    return true;\n  });\n}\nfunction assignCategory(place) {\n  var _place$types;\n  const matched = (_place$types = place.types) === null || _place$types === void 0 ? void 0 : _place$types.map(t => categoryReverseLookup[t]).find(Boolean);\n  place.category = matched || null;\n  return place;\n}\nfunction createMarker(place, index, map, AdvancedMarkerElement) {\n  const markerHTML = ReactDOMServer.renderToStaticMarkup(/*#__PURE__*/_jsxDEV(CustomerMarker, {\n    number: index + 1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 58\n  }, this));\n  const wrapper = document.createElement('div');\n  wrapper.innerHTML = markerHTML;\n  return new AdvancedMarkerElement({\n    map,\n    position: place.location,\n    title: place.displayName,\n    content: wrapper.firstChild\n  });\n}\nexport async function searchNearbyAmenities({\n  map,\n  clickedLocation,\n  radius,\n  includedPrimaryTypes\n}) {\n  const {\n    Place,\n    SearchNearbyRankPreference\n  } = await google.maps.importLibrary('places');\n  const {\n    AdvancedMarkerElement\n  } = await google.maps.importLibrary('marker');\n  const request = {\n    locationRestriction: {\n      center: clickedLocation,\n      radius\n    },\n    fields: ['displayName', 'location', 'businessStatus', 'types', 'rating', 'userRatingCount'],\n    includedPrimaryTypes,\n    maxResultCount: 20,\n    rankPreference: SearchNearbyRankPreference.DISTANCE,\n    language: 'en-AU'\n  };\n  const {\n    places = []\n  } = await Place.searchNearby(request);\n  const filtered = places.filter(place => {\n    var _place$types2, _place$displayName$to, _place$displayName;\n    if (place.businessStatus !== 'OPERATIONAL') return false;\n    const types = (_place$types2 = place.types) !== null && _place$types2 !== void 0 ? _place$types2 : [];\n    const name = (_place$displayName$to = (_place$displayName = place.displayName) === null || _place$displayName === void 0 ? void 0 : _place$displayName.toLowerCase()) !== null && _place$displayName$to !== void 0 ? _place$displayName$to : '';\n    const isTransport = types.some(t => CATEGORY_TYPE_MAP.transport.includes(t));\n    return isRelevantPlace(place, isTransport, name);\n  });\n  const uniquePlaces = removeDuplicatePlaces(filtered).map(assignCategory);\n  const markers = uniquePlaces.map((place, i) => createMarker(place, i, map, AdvancedMarkerElement));\n  return {\n    places: uniquePlaces,\n    markers\n  };\n}","map":{"version":3,"names":["ReactDOMServer","CustomerMarker","jsxDEV","_jsxDEV","CATEGORY_TYPE_MAP","education","medical","shopping","transport","green","culture","categoryReverseLookup","Object","fromEntries","entries","flatMap","category","types","map","type","normalizeName","name","toLowerCase","replace","trim","isRelevantPlace","place","isTransport","rating","userRatingCount","some","t","includes","test","removeDuplicatePlaces","places","seen","Set","filter","norm","displayName","existing","add","assignCategory","_place$types","matched","find","Boolean","createMarker","index","AdvancedMarkerElement","markerHTML","renderToStaticMarkup","number","fileName","_jsxFileName","lineNumber","columnNumber","wrapper","document","createElement","innerHTML","position","location","title","content","firstChild","searchNearbyAmenities","clickedLocation","radius","includedPrimaryTypes","Place","SearchNearbyRankPreference","google","maps","importLibrary","request","locationRestriction","center","fields","maxResultCount","rankPreference","DISTANCE","language","searchNearby","filtered","_place$types2","_place$displayName$to","_place$displayName","businessStatus","uniquePlaces","markers","i"],"sources":["/Users/jungsooyoung/Documents/software modelling/Amenity-Scope/amenity-scope/src/utils/searchNearbyAmenities.js"],"sourcesContent":["/* global google */\nimport ReactDOMServer from 'react-dom/server';\nimport CustomerMarker from '../components/Map/\bCustomMarker';\n\n\nconst CATEGORY_TYPE_MAP = {\n  education: ['primary_school', 'secondary_school', 'university'],\n  medical: ['hospital', 'doctor', 'clinic'],\n  shopping: ['supermarket', 'grocery_store', 'department_store', 'shopping_mall', 'asian_grocery'],\n  transport: ['train_station', 'subway_station', 'bus_station', 'transit_station', 'light_rail_station'],\n  green: ['park', 'state_park', 'campground', 'rv_park'],\n  culture: ['museum', 'library', 'art_gallery', 'stadium', 'concert_hall'],\n};\n\nconst categoryReverseLookup = Object.fromEntries(\n  Object.entries(CATEGORY_TYPE_MAP).flatMap(([category, types]) =>\n    types.map(type => [type, category])\n  )\n);\n\nfunction normalizeName(name) {\n  return name.toLowerCase()\n    .replace(/building\\s*\\d+/g, '')\n    .replace(/academic|campus|centre|center|college|institute|school|university/g, '')\n    .replace(/[^a-z0-9]/g, '')\n    .trim();\n}\n\nfunction isRelevantPlace(place, isTransport, name) {\n  const { types = [], rating = 0, userRatingCount = 0 } = place;\n\n  if ((userRatingCount < 5) || (rating < 3.0)){\n    return false;\n  } \n\n  return (\n    types.some(t => CATEGORY_TYPE_MAP.education.includes(t) && /university|college|high school|primary school/.test(name)) ||\n    (types.includes('hospital') && name.includes('hospital')) ||\n    (types.includes('clinic') && /specialist|surgery|medical|health/.test(name)) ||\n    types.includes('asian_grocery') ||\n    types.includes('department_store') ||\n    types.includes('shopping_mall') ||\n    types.includes('outlet') ||\n    ((types.includes('supermarket') || types.includes('grocery_store')) && /coles|woolworths|aldi/.test(name)) ||\n    isTransport ||\n    (types.some(t => CATEGORY_TYPE_MAP.green.includes(t)) && userRatingCount >= 10 && rating >= 3.8) ||\n    (types.some(t => CATEGORY_TYPE_MAP.culture.includes(t)) && userRatingCount >= 10 && rating >= 3.8)\n  );\n}\n\nfunction removeDuplicatePlaces(places) {\n  const seen = new Set();\n  return places.filter(place => {\n    const norm = normalizeName(place.displayName);\n    if ([...seen].some(existing => norm.includes(existing) || existing.includes(norm))) return false;\n    seen.add(norm);\n    return true;\n  });\n}\n\nfunction assignCategory(place) {\n  const matched = place.types?.map(t => categoryReverseLookup[t]).find(Boolean);\n  place.category = matched || null;\n  return place;\n}\n\nfunction createMarker(place, index, map, AdvancedMarkerElement) {\n  const markerHTML = ReactDOMServer.renderToStaticMarkup(<CustomerMarker number={index + 1} />);\n  const wrapper = document.createElement('div');\n  wrapper.innerHTML = markerHTML;\n  return new AdvancedMarkerElement({\n    map,\n    position: place.location,\n    title: place.displayName,\n    content: wrapper.firstChild,\n  });\n}\n\nexport async function searchNearbyAmenities({ map, clickedLocation, radius, includedPrimaryTypes }) {\n  const { Place, SearchNearbyRankPreference } = await google.maps.importLibrary('places');\n  const { AdvancedMarkerElement } = await google.maps.importLibrary('marker');\n\n  const request = {\n    locationRestriction: { center: clickedLocation, radius },\n    fields: ['displayName', 'location', 'businessStatus', 'types', 'rating', 'userRatingCount'],\n    includedPrimaryTypes,\n    maxResultCount: 20,\n    rankPreference: SearchNearbyRankPreference.DISTANCE,\n    language: 'en-AU',\n  };\n\n  const { places = [] } = await Place.searchNearby(request);\n\n  const filtered = places.filter(place => {\n    if (place.businessStatus !== 'OPERATIONAL') return false;\n    const types = place.types ?? [];\n    const name = place.displayName?.toLowerCase() ?? '';\n    const isTransport = types.some(t => CATEGORY_TYPE_MAP.transport.includes(t));\n    return isRelevantPlace(place, isTransport, name);\n  });\n\n  const uniquePlaces = removeDuplicatePlaces(filtered).map(assignCategory);\n\n  const markers = uniquePlaces.map((place, i) => createMarker(place, i, map, AdvancedMarkerElement));\n\n  return { places: uniquePlaces, markers };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}